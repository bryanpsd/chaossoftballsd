---
import { Image } from "astro:assets";
import { ToastContainer } from "react-toastify";
import { contentfulClient } from "~services/contentful/contentful";
import type {
  TypePageSection,
  TypePageSectionSkeleton,
} from "~types/contentful";
import type { TypeListSkeleton } from "~types/contentful/TypeList";
import background from "../assets/chaos-bg.jpg";
import heroLogo from "../assets/chaos-logo-large.png";
import { contentPadding, pageMaxWidth } from "../styles/common.css";
import { BasicAccordion } from "./Accordion";
import { Form } from "./Form";
import { RichText } from "./RichText";

const entries = await contentfulClient.getEntries<TypePageSectionSkeleton>({
  content_type: "pageSection",
  "fields.title": "Home Section",
});

import type { TypeList } from "~types/contentful/TypeList";

const faqs = await contentfulClient.getEntries<TypeListSkeleton>({
  content_type: "list",
  "fields.title": "FAQs",
});
---

<ToastContainer position="top-center" client:load />
<section id="hero">
  <img id="background" src={background.src} alt="" fetchpriority="high" />
  <h1>Chaos Softball San Diego</h1>
  <Image
    src={heroLogo}
    alt="Chaos Softball San Diego Logo"
    width={300}
    loading="eager"
    fetchpriority="high"
  />
</section>

<section id="intro" class={`${pageMaxWidth} ${contentPadding}`}>
  {
    entries.items.map((item) => (
      <section>
        {item.fields.content && (
          <RichText richText={item.fields.content} client:load />
        )}
      </section>
    ))
  }
</section>

<section id="form" class={`${pageMaxWidth} ${contentPadding}`}>
  <h2>Contact</h2>
  <Form client:load />
</section>

<section id="faqs" class={`${pageMaxWidth} ${contentPadding}`}>
  <h2>Faqs</h2>
  <BasicAccordion list={faqs.items[0]} client:load />
</section>

<style>
  #hero {
    position: relative;
    display: flex;
    align-items: center;
    flex-direction: column;
    justify-content: center;
    padding: 16px;
    min-height: 60vh;
    overflow: hidden;
    text-align: center;
    margin-bottom: 24px;
  }

  #hero::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: black;
    opacity: 0.7;
    z-index: 0;
    pointer-events: none;
  }

  #hero > *:not(#background) {
    position: relative;
    z-index: 1;
    margin: 0.5em auto;
  }

  #background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: -1;
    pointer-events: none;
    user-select: none;
  }

  #more-content {
    margin-top: 2rem;
    display: flex;
    justify-content: center;
  }

  #faqs {
    margin-top: 2rem;
    display: flex;
    justify-content: center;
    flex-direction: column;
  }

  h1 {
    font-size: 42px;
    margin-top: 0.25em;
    color: white;
  }

  h2 {
    margin: 0 0 1em;
    color: #111827;
    font-size: 28px;
  }

  p {
    color: #4b5563;
    font-size: 16px;
    line-height: 24px;
    letter-spacing: -0.006em;
    margin: 0;
  }

  @media screen and (max-width: 768px) {
    #container {
      display: flex;
      flex-direction: column;
    }
  }
</style>
